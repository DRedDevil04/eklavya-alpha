from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
from datetime import datetime

class PentestReport:
    def __init__(self, filename="pentest_report.pdf"):
        self.filename = filename
        self.commands_log = []  # Stores tuples of (timestamp, command, output)
    
    def log_command(self, command, output):
        """Log executed command, its output, and timestamp."""
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        self.commands_log.append((timestamp, command, output))
    
    def generate_pdf(self):
        """Generate a PDF report with logged commands, outputs, and timestamps."""
        c = canvas.Canvas(self.filename, pagesize=letter)
        width, height = letter
        c.setFont("Helvetica", 12)
        c.drawString(30, height - 30, "Penetration Testing Report")
        
        y_position = height - 60  # Start below title
        for i, (timestamp, cmd, out) in enumerate(self.commands_log, 1):
            c.drawString(30, y_position, f"[{timestamp}] Command {i}: {cmd}")
            y_position -= 20
            c.drawString(30, y_position, f"Output: {out[:100]}...")  # Truncate long output
            y_position -= 30  # Space between entries
            
            if y_position < 50:  # Prevent overflow, create a new page
                c.showPage()
                c.setFont("Helvetica", 12)
                y_position = height - 30
        
        c.save()
        print(f"Report saved as {self.filename}")
